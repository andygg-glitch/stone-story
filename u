// Pet Cranius
// by: Newominus
// v1.0
// -Requires big head mode for boss kill victory chest animation and emotes

// Place inside cosmetics folder and import with stonescript using ＂import Cosmetics/PetCranius＂
// Features Cranius the bone giant, ever faithful on your journey and happy to store all your acquisitions in his giant treasure chest! Features customisable chest and victory chest options.
// Recommended to be disabled while participating in quests if you wish to see things.

var skullColor //the color Cranius is
var chestType //how the chest looks
var chestColor //the color the chest is

//CHOOSE YOUR CRANIUS COLOR--------------------------------<
skullColor = #808080   //grey

//CHOOSE YOUR CHEST---------------------------------------<
//Replace with one below: bone | delta
chestType = delta

?chestType = bone
  chestColor = #white
:?chestType = delta
  chestColor = #rainbow

var keepDistance = -50 // distance at which the movement animation will play (stateMoving)
var maxX = -24         // closest offset pet will get to character.  Closer to 0, closer to character
var maxDistance = -70  // if the pet exceeds this distance, it will teleport to this distance (cannot be further away than this)
var targetZ = 2       // We want to start the drawing 1 unit above the player agent

?loc.loop
  keepDistance = -50
  maxX = -24
  maxDistance = -70
  targetZ = 2

var x = 0
var y = 0
var myX = 0
var myZ = 0
var lastPlayerX = 0
var lastPlayerZ = 0

var stateNone = 0
var stateIdle = 1
var stateMoving = 2
var currentState = stateNone
var stateTime = 0
var chestTime = 0


func SetState(newState)
  ?newState = stateMoving
    play haunted_gate_shuffle //play sound when moving
  currentState = newState
  stateTime = 0

?currentState = stateNone | time = 1
  lastPlayerX = pos.x
  lastPlayerZ = pos.z
  myX = keepDistance
  myZ = targetZ

// Start further away if skully is summoned while the location is already running
  ?time > 1
    myX = maxDistance

  SetState(stateIdle)

myX = myX - (pos.x - lastPlayerX) // If player has moved, increment myX (distance from player)

stateTime++

?face = ＂( ^^＂ & stateTime > 30
  chestTime++
?face ! ＂( ^^＂
  chestTime = 0

?currentState = stateIdle 
  ?myX < maxDistance | myX > -maxDistance
    myX = maxDistance
  myZ = myZ - (pos.z - lastPlayerZ)

  ?myX < keepDistance
    SetState(stateMoving)
  
:?currentState = stateMoving & chestTime = 0
  ?myX < maxX
    myX++
  
  ?stateTime >= 6
    ?myZ > targetZ
      myZ--
    :?myZ < targetZ
      myZ++

  ?stateTime >= 12
    SetState(stateIdle)
  
lastPlayerX = pos.x
lastPlayerZ = pos.z

//DRAW state timers--------------------------------<
//for debugging or whatever, uncomment if you want to see

//>`0,7,StateTime = @stateTime@
//>`0,8,ChestTime = @chestTime@

//IDLE---------------------------------------------<

?currentState = stateIdle & face ! ＂( ^^＂ 
  >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
  >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.-â¾â¾â¾`.
###########(________;__,-\\\>
asciiend

//EYES----------------------------------------<
?currentState = stateIdle
  ?face = ＂Â°Â°＂
      ?time % 10 = 0 & myX > keepDistance
        myX--

      ?time % 4 <= 1
        >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#############___,  __,
############(_^) ,(_^)
asciiend
      ?time % 4 > 1
       >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#############___,  __,
############(_^) ,(_^)
asciiend

//BLINKING----------------------------

  ?face ! ＂( ^^＂
    ?stateTime % 50 >= 48
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#############___,  __,
############(==) ,(==)
asciiend
    :?stateTime % 50 >= 46
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#############___,  __,
############(--) ,(--)
asciiend
    :?stateTime % 50 >= 44
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#############___,  __,
############(==) ,(==)
asciiend

//CHEST ANIMATION-----------------------------------------------<

  x = myX + 6
  y = myZ + 4
?face = ＂( ^^＂ 
 ?chestTime <= 5
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \##########_.'â¾â¾.
##########\ ＂..______.     â¾,
###########(________(_____,/
asciiend
//-------------------------------
 :?chestTime <= 10
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
  >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.->####.
###########(________;____;//
asciiend
      ?chestType = bone
        >o@myX@,@myZ-12@,@chestColor@,ascii
#
#
#
#
#
#
#
#
#
#
########################
########################---
#
asciiend
      :?chestType = delta
       >o@myX@,@myZ-12@,@chestColor@,ascii
#
#
#
#
#
#
#
#
#
#
########################
########################---
#
asciiend
 :?chestTime <= 45
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.->####,
###########(________;____;//
asciiend
      ?chestType = bone
        >o@myX@,@myZ-12@,@chestColor@,ascii
#
#
#
#
#
#
#
#
#
#
########################___
########################=o=âª3
#
asciiend
      ?chestType = delta
        >o@myX@,@myZ-12@,@chestColor@,ascii
#
#
#
#
#
#
#
#
#
#
########################___
########################-â-â¡
#
asciiend
//-------------------------------
 :?chestTime <= 50
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \##########_.'â¾â¾.
##########\ ＂..______.     â¾,
###########(________(_____,/
asciiend
//-------------------------------
 :?chestTime <= 60 | chestTime > 60
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.-â¾â¾â¾`.
###########(________;__,-\\\>
asciiend


//MOVING-------------------------------------------<
?currentState = stateMoving
  ?stateTime/2 = 0
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
###########_.-----._ ___///â¾`
#########.'         '.     '.|
########/    ___,  __,\     |;
#######|  \ (_*) ,(_*);-----|.
#######|   ) _  /!)   )     | |
########`.__,.)     ('      |  .
#######/  '.  `'＂＂'Â´/.______|. '.
######| \  \â¾._____/ ;.._   `.  |
######|. '-.__,''._.'####â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#
#####################___
###########################'.
############################|
#######################-----|
############################|
############################|
######################______|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.-â¾â¾â¾`.
###########(________;__,-\\\>
asciiend

  ?stateTime/2 = 1
       >o@myX@,@myZ-12@,@skullColor@,ascii
###########_.-----._ __///â¾`
#########.'         '.    '.|
########/    ___,  __,\    |;
#######|  \ (_*) ,(_*);----|.
#######|   ) _  /!)   )    | |
########`.__,.)     ('     |  .
#######/  '.  `'＂＂'Â´/._____|. '.
######| \  \â¾._____/ ;._   `.  |
######|. '-.__,''._.'###â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
#
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#####################__
##########################'.
###########################|
#######################----|
###########################|
###########################|
######################_____|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
#######\ \
########\ \
#########\ \
##########\ ＂..______.-â¾â¾â¾`.
###########(________;__,-///>
asciiend

  ?stateTime/2 = 2
      >o@myX@,@myZ-12@,@skullColor@,ascii
###########_.-----._ _///â¾`
#########.'         '.   '.|
########/    ___,  __,\   |;
#######|  \ (_*) ,(_*);---|.
#######|   ) _  /!)   )   | |
########`.__,.)     ('    |  .
#######/  '.  `'＂＂'Â´/.____|. '.
######| \  \â¾._____/ ;_   `.  |
######|. '-.__,''._.'##â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
#
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#####################_
#########################'.
##########################|
#######################---|
##########################|
##########################|
######################____|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
######(  )
######| ;
######| |
######| |
######＂ '
######. \._______.-â¾â¾â¾`.
######(________;__,-///>
asciiend
  ?stateTime/2 = 3
      >o@myX@,@myZ-12@,@skullColor@,ascii
###########_.-----._ _///â¾`
#########.'         '.   '.|
########/    ___,  __,\   |;
#######|  \ (_*) ,(_*);---|.
#######|   ) _  /!)   )   | |
########`.__,.)     ('    |  .
#######/  '.  `'＂＂'Â´/.____|. '.
######| \  \â¾._____/ ;_   `.  |
######|. '-.__,''._.'##â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
#
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#####################_
#########################'.
##########################|
#######################---|
##########################|
##########################|
######################____|
asciiend
    >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
######(  )
######| ;
######| |
######| |
######' '
#####; '_______.-â¾â¾â¾`.
####(________;__,-///>
asciiend

  ?stateTime/2 = 4
      >o@myX@,@myZ-12@,@skullColor@,ascii
###########_.-----._ _///â¾`
#########.'         '.   '.|
########/    ___,  __,\   |;
#######|  \ (_*) ,(_*);---|.
#######|   ) _  /!)   )   | |
########`.__,.)     ('    |  .
#######/  '.  `'＂＂'Â´/.____|. '.
######| \  \â¾._____/ ;_   `.  |
######|. '-.__,''._.'##â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
#
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#####################_
#########################'.
##########################|
#######################---|
##########################|
##########################|
######################____|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
######; /
#####/ /
####/ /
###; '.______.-â¾â¾â¾`.
##(________;__,-///>
asciiend

  ?stateTime/2 = 5
      >o@myX@,@myZ-12@,@skullColor@,ascii
###########_.-----._ __///â¾`
#########.'         '.    '.|
########/    ___,  __,\    |;
#######|  \ (_*) ,(_*);----|.
#######|   ) _  /!)   )    | |
########`.__,.)     ('     |  .
#######/  '.  `'＂＂'Â´/._____|. '.
######| \  \â¾._____/ ;._   `.  |
######|. '-.__,''._.'###â¾â¾-____)
######\ '.___,''._.'
#####.' \__\##/__/
####［_.'####
#
asciiend
      >o@myX@,@myZ-12@,@chestColor@,ascii
#####################__
##########################'.
###########################|
#######################----|
###########################|
###########################|
######################_____|
asciiend
      >o@myX@,@myZ-12@,@skullColor@,ascii
#
#
#
#
#
#
#
######(  )
######;   '.
#####â¾ /    â¾. 
####_  / â¾â¾-- â¾.___  
###-               â¾â¾.
###((___---â¾â¾â¾----,,///>
asciiend

?item.right.state = 3
 equipR *0 shield //trash
 equip @item.right@
?item. left.state = 3
 equipl *0 wand //trash
 equipl @item.left@



// Pet Dog
// by: standardcombo
// v1.1

?loc.begin
  > Press ENTER to bark!


var petColor
petColor = #white

var keepDistance = -36
var maxX = -19

var maxDistance
maxDistance = -70

var targetZ = -4

var x = 0
var y = 0
var myX = 0
var myZ = 0
var lastPlayerX = 0
var lastPlayerZ = 0

var stateNone = 0
var stateIdle = 1
var stateBark = 2
var stateJump = 3
var stateStopping = 4
var currentState = stateNone
var stateTime = 0

var barkDuration = 6


func SetState(newState)
  ?newState = stateJump
    play haunted_gate_shuffle

  currentState = newState
  stateTime = 0


?currentState = stateNone | time = 1
  lastPlayerX = pos.x
  lastPlayerZ = pos.z
  myX = keepDistance
  myZ = targetZ

  // Start further away if the frog is summoned while the location is already running
  ?time > 1
    myX = maxDistance

  SetState(stateIdle)


// Bark input
?key = primaryBegin
  play dog_bark
  ?currentState = stateIdle
    SetState(stateBark)
  :?currentState = stateBark
    stateTime = 1


myX = myX - (pos.x - lastPlayerX)

stateTime++

?currentState = stateIdle
  ?myX < maxDistance | myX > -maxDistance
    myX = maxDistance
  myZ = myZ - (pos.z - lastPlayerZ)

  ?myX < keepDistance
    SetState(stateJump)

:?currentState = stateBark
  ?stateTime >= barkDuration
    SetState(stateIdle)
  myZ = myZ - (pos.z - lastPlayerZ)

:?currentState = stateJump
  ?myX < maxX
    myX++

  ?stateTime >= 6 & time % 2 = 0
    ?myZ > targetZ
      myZ--
    :?myZ < targetZ
      myZ++

  ?stateTime >= 12
    ?myX < maxX - 1
      SetState(stateJump)
    :
      SetState(stateStopping)

:?currentState = stateStopping
  ?stateTime >= 1
    SetState(stateIdle)


lastPlayerX = pos.x
lastPlayerZ = pos.z


// Draw

?currentState = stateIdle
  >o@myX@,@myZ@,@petColor@,ascii
#
#
#########|\´/
#########/   -,
######,-´ `--´
#####/ _   ;
#### , _)\(
#### `-'  `＂
asciiend

  x = myX + 8
  y = myZ + 3
  
  ?face = ＂^^＂
    >o@x@,@y@,@petColor@,ascii
#/ ^^
asciiend

  :?(bighead = false & time % 90 > 8) | face = ＂''＂ | face = ＂,,＂ | face = ＂°°＂
    >o@x@,@y@,@petColor@,ascii
#/ ''
asciiend


  // Tongue
  
  y++
  
  ?time % 100 < 50
    ?time % 100 <= 3 | time % 100 >= 46
      >o@x@,@y@,@petColor@,ascii
# `--'
asciiend

    :?time % 100 <= 7 | time % 100 >= 42
      >o@x@,@y@,@petColor@,ascii
# `-';
asciiend

    :?time % 8 <= 3
      >o@x@,@y@,@petColor@,ascii
# `-\)
asciiend
    :
      >o@x@,@y@,@petColor@,ascii
# `-`'
asciiend


?currentState = stateBark
  ?stateTime = 0 | stateTime = (barkDuration - 1)
    >o@myX@,@myZ@,@petColor@,ascii
#
#
#########|\|
#########/  `-,
######,-´ `--`
#####/ _   ;
#### , _)\(
#### `-'  `＂
asciiend
  :
    >o@myX@,@myZ@,@petColor@,ascii
#
#
#########\``--,
#########/ _.-'
######,-´  |
#####/ _   ;
#### , _)\(
#### `-'  `＂
asciiend


?currentState = stateIdle | currentState = stateBark
  // Tail
  
  x = myX
  y = myZ + 5
  
  ?time % 10 <= 1
    >o@x@,@y@,@petColor@,ascii
#
#,--'
#`- ‾
asciiend

  :?time % 10 = 2
    >o@x@,@y@,@petColor@,ascii
#
#,--'
#\' ‾
asciiend

  :?time % 10 = 3
    >o@x@,@y@,@petColor@,ascii
#
,--'´
'´ ‾ 
asciiend

  :?time % 10 = 4
    >o@x@,@y@,@petColor@,ascii
#_
#\`'´
##`‾ 
asciiend

  :?time % 10 = 5 | time % 10 = 6
    >o@x@,@y@,@petColor@,ascii
##,
#(`'´
##‾  
asciiend

  :?time % 10 = 7
    >o@x@,@y@,@petColor@,ascii
#,
#\`-´
##‾‾ 
asciiend

  :?time % 10 = 8
    >o@x@,@y@,@petColor@,ascii
#
\---'
#` ‾ 
asciiend

  :?time % 10 = 9
    >o@x@,@y@,@petColor@,ascii
#
#,--'
´‾ ‾‾
asciiend



?currentState = stateJump
  ?stateTime/2 = 0
    >o@myX@,@myZ@,@petColor@,ascii
#
###########-.-,
##########.´ ''-,
#;###.--'´  `--´
#\`-´   _  /
##`´#\ )| /`.
#####(( ;/ `'
######`＂´
asciiend

  :?stateTime/2 = 1
    >o@myX@,@myZ@,@petColor@,ascii
###########-.-,
###########/ ''-,
#######_.-´ `--´
#,##,-´     /
('-´    _. /`-.
#`'´| ;‾#`,|##`'
####// \#.-'
###`'##`'
asciiend

  :?stateTime/2 = 2
    >o@myX@,@myZ@,@petColor@,ascii
###########|\´/
#########_.´ ''-,
####,-'´    `--´
,.-´     _  )_
`-'/ _.´##'--,)
#,´.´.######, 
#|| (####### `'
#`'#`'
asciiend

  :?stateTime/2 = 3
    >o@myX@,@myZ@,@petColor@,ascii
#
###########;(,|
,.---._ __.' ''-,
`-'´.       `--´
###/ ,-.__  |
#,´-´#####`-.`.
'´#`'######, `,)
###########`-'
asciiend

  :?stateTime/2 = 4
    >o@myX@,@myZ@,@petColor@,ascii
#
#,
('-._######;(,|
 `'´ `-.__.' ''-,
####/       `--´
#,-´_.´`.__ !
#'´'#####, `.`.
#########`-' `-'
asciiend

  :?stateTime/2 = 5
    >o@myX@,@myZ@,@petColor@,ascii
#
#
#;#########|\´/
#\`-----._.´ ''-,
##`´/       `--´
###,'_,-._/ !
####\\.##,|(
#####`＂#'´`-'
asciiend



?currentState = stateStopping
  ?stateTime = 0
    >o@myX@,@myZ@,@petColor@,ascii
#
#
##########|\´/
#;########/ ''-,
#\`--.---´ `--´
##`´|  ;  , !
####`,(`--|(
##### `＂  `-'
asciiend
  :
    >o@myX@,@myZ@,@petColor@,ascii
#
#
#########|\´/
#########/ ''-,
#;###,--´ `--´
#\`-´  -.  ;
##`- ;,-'\(
#####`-'  `＂
asciiend


// A Crown for Pallas, version 0.7
// by Fyda
// with thanks to raeborga and Ofek for many helpful suggestions

var inStageTwo = 0

var leftBooo
var rightBooo
var leftBoooSweat
var rightBoooSweat
var currentModulo
var leftSways = 0
var rightSways = 0
var crownFalling = 0
var crownNoisePlayed = 0

var leftBoooX = -3
var leftBoooY = -4
var rightBoooX = 16
var rightBoooY = -4

var leftBoooSweatX = -3
var leftBoooSweatY = -4
var rightBoooSweatX = 23
var rightBoooSweatY = -4

var crownBaseX = 6
var crownBaseY = -6
var crownJewelsX = 6
var crownJewelsY = -4
var crownLiningX = 6
var crownLiningY = -3

func ResetBooos()
 leftBoooY = -22
 rightBoooY = -22
 leftBoooSweatY = -22
 rightBoooSweatY = -22
 ?leftSways = rightSways
  leftSways = 0
  rightSways = 0

func ResetCrown()
 crownBaseY = -24
 crownJewelsY = -22
 crownLiningY = -21
 crownFalling = 0
 crownNoisePlayed = 0

var leftBooo1 = ascii
####.-.
###(- -) 
###\ ‾ `-´
####) /
####|/
####'
asciiend

var leftBooo2 = ascii
####.-.
###(> <) 
###\ ‾ `-´
####\ /
####'/
####!
asciiend

var rightBooo1 = ascii
###.-.
##(- -) 
`-´ ‾ /
###\ (
####\|
#####'
asciiend

var rightBooo2 = ascii
###.-.
##(> <) 
`-´ ‾ /
###\ /
####\'
#####!
asciiend

var leftBoooSweat1 = ＂°·＂
var leftBoooSweat2 = ＂`#＂
var leftBoooSweat3 = ＂#.＂
var leftBoooSweat4 = ＂·´＂

var rightBoooSweat1 = ＂·°＂
var rightBoooSweat2 = ＂#´＂
var rightBoooSweat3 = ＂.#＂
var rightBoooSweat4 = ＂.`＂

var crownBase = ascii
,####†####,
\\_,/ \,_//
#\_∞_☼_∞_/
(…÷…÷…÷…÷…)
#‾‾‾‾‾‾‾‾‾
asciiend

var crownJewels = ascii
###∞#☼#∞
asciiend

var crownLining = ascii
(…÷…÷…÷…÷…)
asciiend

func Descend()
 ?crownFalling = 0
  ?currentModulo = 0
   ?leftBoooY < -5
    leftBoooY++
   ?rightBoooY < -5
    rightBoooY++
   ?leftBoooSweatY < -5
    leftBoooSweatY++
   ?rightBoooSweatY < -5
    rightBoooSweatY++
   ?crownBaseY < -7
    crownBaseY++
   ?crownJewelsY < -5
    crownJewelsY++
   ?crownLiningY < -4
    crownLiningY++
 ?crownFalling = 1
  ?time % 2 = 0
   ?crownBaseY < 5
    crownBaseY++
   ?crownJewelsY < 7
    crownJewelsY++
   ?crownLiningY < 8
    crownLiningY++

func PlayCrownNoise()
 play perfected_defense
 crownNoisePlayed = 1

func SwayLeft()
 leftBoooX--
 rightBoooX--
 leftBoooSweatX--
 rightBoooSweatX--
 crownBaseX--
 crownJewelsX--
 crownLiningX--
 leftSways++

func SwayRight()
 leftBoooX++
 rightBoooX++
 leftBoooSweatX++
 rightBoooSweatX++
 crownBaseX++
 crownJewelsX++
 crownLiningX++
 rightSways++
 
func Sway()
 ?currentModulo = 0
  ?crownFalling = 0
   ?leftSways < rightSways
    SwayLeft()
   :
    SwayRight()
  
func DrawBooos()
 ?time % 8 = 0
  leftBooo = leftBooo1
  rightBooo = rightBooo1
 ?time % 5 = 0
  leftBooo = leftBooo2
  rightBooo = rightBooo2
 >c@leftBoooX@,@leftBoooY@,#5a5a5a,@leftBooo@
 >c@rightBoooX@,@rightBoooY@,#5a5a5a,@rightBooo@

func DrawSweat()
 ?currentModulo < 2
  leftBoooSweat = leftBoooSweat1
  rightBoooSweat = rightBoooSweat1
 ?currentModulo > 1 & currentModulo < 5
  leftBoooSweat = leftBoooSweat2
  rightBoooSweat = rightBoooSweat2
 ?currentModulo > 4 & currentModulo < 8
  leftBoooSweat = leftBoooSweat3
  rightBoooSweat = rightBoooSweat3
 ?currentModulo > 7
  leftBoooSweat = leftBoooSweat4
  rightBoooSweat = rightBoooSweat4
 >c@leftBoooSweatX@,@leftBoooSweatY@,#ffffff,@leftBoooSweat@
 >c@rightBoooSweatX@,@rightBoooSweatY@,#ffffff,@rightBoooSweat@
 
func DrawCrown()
 >c@crownBaseX@,@crownBaseY@,#ffca00,@crownBase@
 >c@crownJewelsX@,@crownJewelsY@,#ff0a00,@crownJewels@
 >c@crownLiningX@,@crownLiningY@,#ffffff,@crownLining@

// start the objects at the top edge of the screen
// and track whether we've reached Pallas stage 2
?loc = undead_crypt
 ?loc.begin
  ResetBooos()
  ResetCrown()
 ?loc.loop
  ResetBooos()
  ResetCrown()
  inStageTwo = 0
 ?foe = pallas & foe = stage_2
  inStageTwo = 1

// once we've reached stage 2, activate
?inStageTwo = 1
 currentModulo = time % 5
 ?crownFalling = 0
  Sway()
  Descend()
  DrawBooos()
  DrawSweat()
  DrawCrown()
 ?crownFalling = 1
  Descend()
  DrawCrown()
  ?crownNoisePlayed = 0
   PlayCrownNoise()
 ?foe.count = 0
  ResetBooos()
  crownFalling = 1

// Star Cloak - by Raeborga
// v1.0
// Requires big head

var bgc = white

?loc.stars>30
 bgc=rain
?loc.stars<31
 bgc=red
?loc.stars<26
 bgc=blue
?loc.stars<21
 bgc=green
?loc.stars<16
 bgc=yellow
?loc.stars<11
 bgc=cyan
?loc.stars<6
 bgc=white
?loc.stars<1
 bgc=magenta

>h-3,-2,#bf9f7f,ascii
##__##
##, `#
#(###)
##^.^##
#//####
´´###``
asciiend

>h-2,-1,#@bgc@,ascii
☆
asciiend

/*
CatHotAirBalloon
Version 1.0.0
A friendly catto to float along.

written by bitty45
hot air balloon art by tomatobulb
cat art by sun(  UωU)

to use: import Cosmetics/CatHotAirBalloon
*/

//EDITABLE VALUES============
var X_MOVE_SPEED = 1
var X_MOVE_RATE = 3
var MIN_X = -20
var MAX_X = screen.w + 20
var MIN_HEIGHT = 2
var MAX_HEIGHT = 4
var LOOP_TIME = 300

var X_OFFSET = 0
var Y_OFFSET = 0
var ART2_X_OFFSET = 4
var ART2_Y_OFFSET = 8
var PET_COLOR1 = #ffffff
var PET_COLOR2 = #FF0000
var ANIM_LOOP_TIME = 80

//ART========================
var petArt = ui.AddAnim(ascii
######__
##•´‾(  )‾`•
#´   /‾‾\   `
|   •    •   |
.   |    |   .
#\  .    .  /
##\  \  /  /
###'. •• .'
#####│##│
#####│##│
####.│──┴──.
###¡‾‾‾‾‾‾¡│
###│______│,
asciiend)

var petArt2 = ui.AddAnim(ascii
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
#####,
#-.-´'\
#\ oω°)
%%
######,
__.-~´|
`. -ω´)
%%
#####,
#-.-´'\
#\ -ω´)
asciiend)

//========================
var halfLoopTime
var petX
var petHeight
var movingUp = true
var pos_x
var screen_w = screen.w
var offScreen_behind = false
var offScreen_ahead = false
var petScreenX

var petPnl

petMain()

func initPet()
  var addAndInitAnim = func(anim, x, y, dur, loop, color)
    petPnl.Add(anim)
    anim.anchor = top_left
    anim.dock = top_left
    anim.x = x
    anim.y = y
    anim.duration = dur
    anim.loop = loop
    anim.color = color
    anim.Play()
  
  var style = ui.AddStyle(＂
^###
^###
^###＂)
  petPnl = ui.AddPanel()
  petPnl.h = 1
  petPnl.w = 1
  petPnl.style = style
  petPnl.anchor = top_left
  petPnl.dock = top_left
  addAndInitAnim(petArt, X_OFFSET, Y_OFFSET, ANIM_LOOP_TIME, true, PET_COLOR1)
  addAndInitAnim(petArt2, X_OFFSET+ART2_X_OFFSET, Y_OFFSET+ART2_Y_OFFSET, ANIM_LOOP_TIME, true, PET_COLOR2)
  resetPet()

func resetPet()
  petX = pos_x - screen_w
  petHeight = MIN_HEIGHT
  movingUp = true
  
func petMain()
  pos_x = pos.x
  ?!petPnl
    initPet()
  petScreenX = screen.FromWorldX(petX + X_OFFSET)
  offScreen_behind = petScreenX < MIN_X
  offScreen_ahead = petScreenX > MAX_X
  ?(time%X_MOVE_RATE = 0 | offScreen_behind) & !offScreen_ahead
    ?offScreen_behind
      petX += X_MOVE_SPEED*2
    :
      petX += X_MOVE_SPEED
  :?petScreenX > MAX_X
    resetPet()
  ?movingUp
    petHeight = getHeightArch() - MIN_HEIGHT
  :
    petHeight = -1*getHeightArch() - MIN_HEIGHT
  ?getPercentHalfLoop() = 1
    movingUp = !movingUp
  var printX = screen.FromWorldX(petX + X_OFFSET)
  var printY = screen.FromWorldZ(petHeight + Y_OFFSET)
  petPnl.x = printX
  petPnl.y = printY
  
func getHeightArch()
  //creates a parabola between start and end points, with max height
  //a = -jumpheight / (( mid - start )( mid - end ))
  //(y(x) = ( x - start )( x - end )a
  var multi = getHeightDiff()/0.125
  var XMinusStart = getPercentHalfLoop()
  var XMinusEnd = getPercentHalfLoop()-1
  var result = XMinusStart*XMinusEnd*multi
  return math.RoundToInt(result)

func getHeightDiff()
  return MAX_HEIGHT - MIN_HEIGHT
  
func getPercentHalfLoop()
  var halfLoopTime = LOOP_TIME/2.0
  return (time%halfLoopTime)/halfLoopTime



/*Quips v2.0.0
  By Superfluous J
  Import it, it's all you need to do.
  
  To add your own quips or remove quips in the file, search for ＂QUIPS START HERE＂ in the script.
  The script checks for a state, and then adds a quip to a list of potential quips based on that state.
  To add a quip for, say, starting out each time on Rocky Plateau, you could add:
  ?loc = Rocky & loc.time=1
    a.Add(＂A witty saying\nwould be here\nif I had one.＂)

  This would make the character sometimes say (But only in Rocky Plateau):
  .────────────────.
  │ A witty saying │
  │ would be here  │
  │ if I had one.  │
  '───────────. .──'
               \│

*/

/*******************************************************************************************
  Set ＂demo=0＂ for normal timings. demo=1 makes the player a chatterbox so you can see more
  quips and get a feel for what might get said at various times.
*******************************************************************************************/
var demo=1

/*******************************************************************************************
  Here are many variables to know what the state
  quip if, say, you lost 5 or more hit points. Or the enemy count went down (or up) by 10 or more. See
  the quips already present for ideas. These variables all start with ＂old_＂ and are to remember what
  game variables were on the previous tick. If you add your own variables here, make sure you also 
  set it at the end of the main script where I set all the other ＂old_＂ variables.
*******************************************************************************************/
var old_hp=0
var old_maxhp=0
var old_armor=0
var old_maxarmor=0
var old_debuffs=＂＂
var old_foe=＂＂
var old_foecount=0
var old_foedistance=0
var old_foedebuffs=＂＂
var old_foestate=0
var old_foehp=0
var old_foemaxhp=0
var old_foearmor=0

var quipexclstr= ＂a＂//A string that holds identifiers for quips so they don't repeat too often.
var quiptimer = -1//Are we supposed to start a quip? (negative, we said a quip. 0, we should say a quip. positive, timer before we can say a quip)
var quipme = 0     //Are we currently saying a quip?
var quippos        //Where the quip starts, horizontally. A factor of the length of the quip's longest line.
var quipht         //Where the quip starts, vertically. A factor of the quip's line count.
var quipct         //The quip's line count.
var quiplen        //The length of the raw quip.
var thequip        //The quip. A string, possibly cut into multiple lines by \n's
var midquip        //A line of the quip that is to be put into an array
var quiplside      //The left side of the quip outline. Literally 2 to the left of the quip's left side.
var quiparr = ［］   //The quip, stored in an array of strings instead of 1 string with \n's
var i              //for a for loop, to iterate the quip line by line.
var j              //for a for loop, to draw black squares in the quip text box before writing the quip.

/*******************************************************************************************
First, determine if a long enough time has passed so we can say a quip.
This is a matter of taste. Either you want to be a chatterbox so you'd set it low, or you want quips to be rare so you set it high.
The variable ＂quiptimer＂ here is the number of ticks between the last quip ending and a new quip starting, and is determined by the function.
Any function can be used, but the default ＂500 + rng % 500＂ will force a 500 tick wait, and allow a quip to be said after 0-500 more ticks.
If quiptimer is less than zero, reset it. If it's greater than 0 decrement it by 1. If it's 0, we'll handle that below.
*******************************************************************************************/

?quiptimer < 0
  ?demo=1
    quiptimer = 50
  :
    quiptimer = 500 + rng%500
:?quiptimer > 0
  quiptimer = quiptimer - 1

// If we're saying a quip...
?quipme > 0
  //draw the top 2 corners of the quip word bubble.
  quipht = -4-quipct
  >o@quiplside@,@quipht@,#808080,.
  >o2,@quipht@,#808080,.
  
  //draw the top and bottom lines of the quip word bubble, and the \│ part.
  for i = quippos-1..1
    >o@i@,@quipht@,#808080,─
    >o@i@,-3,#808080,─
  >o@quiplside@,-3,#808080,'
  >o-3,-3,#808080,. .──'
  >o-2,-2,#808080,\│
  
  //write the quip, first clearing the line with solid black ascii.
  for i = 0..quipct-1
    quipht = -3-quipct+i
    for j = quippos-1..1
      >o@j@,@quipht@,#000000,.
    midquip = quiparr［i］
    >o@quippos@,@quipht@,@midquip@
    >o@quiplside@,@quipht@,#808080,│
    >o2,@quipht@,#808080,│

  //reduce the quipme timer, so you'll stop talking.
  quipme = quipme - 1

//If we're supposed to be saying a quip, AND we win a coin flip (or are demonstrating)
:?quiptimer = 0 & (demo = 1 | rng < 5000)
  //find a quip to say. NOTE: Returns a quip or 0_NO_QUIP, which means nothing quip-worthy is currently happening.
  thequip = getaquip()
  ?thequip ! ＂0_NO_QUIP＂
    //reset quip timer (you say it for 50 frames)
    quipme = 50
    //clear the quip array and put the quip into it, for saying.
    quiparr.Clear()
    quiparr = string.Break(thequip,1000)
    //Find the maximum width of the lines in the quip, and set the variables for drawing the text box later.
    quipct = quiparr.Count()
    quippos = 0
    for i = 0..quipct-1
      midquip = quiparr［i］
      ?quippos < string.Size(midquip)
        quippos = string.Size(midquip)
    quippos=-quippos+1
    quiplside=quippos-2
    //set quiptimer to -1, so we know next loop to reset it.
    quiptimer = -1

//Set all variables for the next tick.
old_hp       = hp
old_maxhp    = maxhp
old_armor    = armor
old_maxarmor = maxarmor
old_debuffs  = debuffs.string
old_foe      = foe
old_foecount = foe.count
old_foedistance = foe.distance
old_foedebuffs = foe.debuffs.string
old_foestate = foe.state
old_foehp = foe.hp
old_foemaxhp = foe.maxhp
old_foearmor = foe.armor

/***************
   FUNCTIONS
***************/
func getaquip()
  //variables of what all important stats were last tick, to check changes in game state.
  var a = ［］ //array of potential things to say
  var c = 0  //the random thing that gets said
  a.Clear()

  // **************************
  // **** QUIPS START HERE ****
  // **************************
  
  //Quips based on world.
  ?loc = rocky
    ?foe.state=126 & foe.time=80
      a.Add(＂Why yes, I'd love\na challenge!＂)
 
  //Quips based on your status
  ?hp < old_hp
    a.Add(＂Mocc'alla fess de mammt!＂)
    a.Add(＂Ngul!＂)
    a.Add(＂Puttana tua madre!＂)
  ?hp > old_hp & hp=maxhp
    a.Add(＂There, all better.＂)
  ?hp < old_hp & hp*10 < maxhp
    a.Add(＂I'm getting too\nold for this!＂)
  ?armor > old_armor & armor = maxarmor
    a.Add(＂Armor up!＂)
  ?debuffs.string=＂debuff_chill＂ & old_debuffs ! ＂debuff_chill＂
    a.Add(＂Brr!＂)
  ?debuffs.string=＂debuff_dot＂ & old_debuffs ! ＂debuff_dot＂
    a.Add(＂I'm on fire!\nNo not like that\nI mean I'm\nliterally ON FIRE!＂)
  ?debuffs.string=＂debuff_damage＂ & old_debuffs ! ＂debuff_damage＂
    a.Add(＂I don't feel\nso good...＂)
  
  //Quips based on enemy status
  ?foe.hp < old_foehp & foe.hp*10 < foe.maxhp & foe.hp < 500 & foe.maxhp > 100
    a.Add(＂DM Says you're\ngonna die!\nRoll a D6!＂)
    a.Add(＂Almost there!＂)
    a.Add(＂JUST DIE\nALREADY!＂)
  ?foe.count > 5 & old_foecount-1 = foe.count
    a.Add(＂One down,\n＂ + foe.count + ＂ to go.＂)
  ?foe.debuffs.string=＂debuff_chill＂ & old_foedebuffs ! ＂debuff_chill＂
    a.Add(＂Ice to meet you!＂)
    a.Add(＂Get iced!＂)
    a.Add(＂Chill out!＂)
  ?foe.debuffs.string=＂debuff_dot＂ & old_foedebuffs ! ＂debuff_dot＂
    a.Add(＂Flame On!＂)
  ?foe.debuffs.string=＂debuff_damage＂ & old_foedebuffs ! ＂debuff_damage＂
    a.Add(＂Oh sorry did\nI poison you?＂)
    a.Add(＂Does this taste\nlike poison\nto you?＂)
  ?foe.armor > old_foearmor & old_foearmor > -1
    ?foe.armor-old_foearmor > 1000
      a.Add(foe.armor + ＂ armor, really?＂)
    :
      a.Add(＂Great, more armor\nto go through.＂)
  ?foe.distance < 5 & foe.distance < old_foedistance
    a.Add(＂IN YO FACE!＂)
    a.Add(＂Godo coglione!＂)
  ?foe ! bat & oldfoe = bat
    a.Add(＂No bats in\nthis belfry!＂)
      
  //Qiups based on enemy and your status
  ?foe=＂boss＂
    ?foe.hp < old_foehp & foe.hp*10<foe.maxhp & foe.hp < 500 & hp*10>maxhp*9
      a.Add(＂Aren't boss fights\nsupposed to be\ndifficult or something?＂)
      a.Add(＂Boss? More\nlike WUSS!＂)
    ?old_foestate=33 & foe.state ! 33 & hp>=old_hp & armor>=old_armor
      a.Add(＂Missed me!＂)
      a.Add(＂Dodge! Parry! Fight!＂)
  
  //Random quips
  

  //In case there are no quips, needs to return the error.
  ?a.Count() = 0
    return ＂0_NO_QUIP＂

  //return 1 quip
  c = rng % a.Count()
  quiplen=string.Size(a［c］)
  ?quiplen > 10
    quiplen = 10
  ?quipexclstr = string.Sub(a［c］,0,quiplen)
    return ＂0_NO_QUIP＂
  :
    quipexclstr = string.Sub(a［c］,0,quiplen) + quipexclstr
    ?string.Size(quipexclstr) > 100
      quipexclstr=string.Sub(quipexclstr, 0, 100)
    return a［c］